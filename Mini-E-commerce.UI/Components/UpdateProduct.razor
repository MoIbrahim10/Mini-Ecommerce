@page "/edit/{Id:int}"
@inject IService<ProductDto,ProductCreateDto> ProductService
@inject NavigationManager NavigationManager

<h3 class="text-light">Edit Product</h3>

@if (product == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="product" OnValidSubmit="EditProduct">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name" class="text-light">Name</label>
            <InputText id="name" @bind-Value="product.Name" placeholder="Name" class="form-control" />
            <ValidationMessage For="() => product.Name" />
        </div>

        <div class="form-group">
            <label for="description" class="text-light">Description</label>
            <InputText id="description" @bind-Value="product.Description" placeholder="Description" class="form-control" />
            <ValidationMessage For="() => product.Description" />
        </div>

        <div class="form-group">
            <label for="price" class="text-light">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" placeholder="Price" class="form-control" />
            <ValidationMessage For="() => product.Price" />
        </div>

        <div class="form-group">
            <label for="image" class="text-light">Image</label>
            <InputText id="image" @bind-Value="product.Image" placeholder="Image" class="form-control" />
            <ValidationMessage For="() => product.Image" />
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    private ProductCreateDto product;

    protected override async Task OnInitializedAsync()
    {
        var _product = await ProductService.GetByIdAsync(Id);
        product = new ProductCreateDto { Name = _product.Name,Description = _product.Description, Price = _product.Price,Image = _product.Image };
    }

    private async void EditProduct()
    {
        await ProductService.UpdateAsync(Id, product);
        NavigationManager.NavigateTo("/products");
    }
}
